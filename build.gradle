/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    maven {
        url "https://github.com/rosjava/rosjava_mvn_repo/raw/master"
    }
    maven {
        url "https://repository.springsource.com/maven/bundles/release"
    }
    maven {
        url "https://repository.springsource.com/maven/bundles/external"
    }
    maven { url 'https://jitpack.io' }
}

dependencies {
    // Use JUnit test framework.
    testImplementation 'junit:junit:4.13.2'

    // This dependency is used by the application.
    implementation 'com.github.CST-Group:cst-desktop:1.0.3'
    implementation 'com.github.CST-Group:WS3DProxy:0.0.1'
    implementation 'org.json:json:20180813'
    implementation group: 'org.zeromq', name: 'jeromq', version:'0.5.2'
    implementation group: 'co.nstant.in', name: 'cbor', version:'0.9'
    implementation fileTree(dir: 'libs', include: '*.jar')
    testImplementation group: 'junit', name: 'junit', version: '4.10'
}

application {
    // Define the main class for the application.
    mainClass = 'CSTEpisodicMemory.ExperimentMain'
}
jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    archiveClassifier = 'full'
    manifest {
      attributes(
        'Main-Class': 'CSTEpisodicMemory.ExperimentMain'
      )
    }
    from sourceSets.main.output
    dependsOn configurations.runtimeClasspath
    from {
        configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }
    }
    exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA'
}